/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module add_5 (
    input clk,
    input rst,
    input [5:0] alufn,
    input [15:0] a,
    input [15:0] b,
    output reg [15:0] out,
    output reg [0:0] v,
    output reg [0:0] z,
    output reg [0:0] n
  );
  
  
  
  reg [15:0] sum_intermediate;
  
  always @* begin
    
    case (alufn[0+0-:1])
      1'h0: begin
        sum_intermediate = a + b;
        v = (((a[15+0-:1]) & (b[15+0-:1]) & (~sum_intermediate[15+0-:1])) | ((~a[15+0-:1]) & (~b[15+0-:1]) & (sum_intermediate[15+0-:1])));
      end
      1'h1: begin
        sum_intermediate = a - b;
        v = (((a[15+0-:1]) & (b[15+0-:1]) & (~sum_intermediate[15+0-:1])) | ((~a[15+0-:1]) & (~b[15+0-:1]) & (sum_intermediate[15+0-:1])));
      end
      default: begin
        sum_intermediate = a + b;
        v = (((a[15+0-:1]) & (b[15+0-:1]) & (~sum_intermediate[15+0-:1])) | ((~a[15+0-:1]) & (~b[15+0-:1]) & (sum_intermediate[15+0-:1])));
      end
    endcase
    out = sum_intermediate[0+15-:16];
    z = (~|sum_intermediate);
    n = sum_intermediate[15+0-:1];
  end
endmodule
